digraph "CFG for 'accumulate_1d_linear' function" {
	label="CFG for 'accumulate_1d_linear' function";

	Node0x3b1b220 [shape=record,label="{entry:\l  %0 = sext i32 %n to i64\l  %1 = sext i32 %m to i64\l  br label %for.cond\l}"];
	Node0x3b1b220 -> Node0x3b1b3c0;
	Node0x3b1b3c0 [shape=record,label="{for.cond:                                         \l  %i.iv = phi i64 [ %i.iv.next, %for.inc ], [ %0, %entry ]\l  %acc.0 = phi i32 [ 0, %entry ], [ %add, %for.inc ]\l  %cmp = icmp sle i64 %i.iv, %1\l  br i1 %cmp, label %for.body, label %for.end\l|{<s0>T|<s1>F}}"];
	Node0x3b1b3c0:s0 -> Node0x3b1b850;
	Node0x3b1b3c0:s1 -> Node0x3b1b940;
	Node0x3b1b850 [shape=record,label="{for.body:                                         \l  %arrayidx = getelementptr inbounds i32* %in, i64 %i.iv\l  %2 = load i32* %arrayidx, align 4\l  %add = add nsw i32 %acc.0, %2\l  br label %for.inc\l}"];
	Node0x3b1b850 -> Node0x3b1b490;
	Node0x3b1b490 [shape=record,label="{for.inc:                                          \l  %i.iv.next = add nsw i64 %i.iv, 1\l  br label %for.cond\l}"];
	Node0x3b1b490 -> Node0x3b1b3c0;
	Node0x3b1b940 [shape=record,label="{for.end:                                          \l  %acc.0.lcssa = phi i32 [ %acc.0, %for.cond ]\l  ret i32 %acc.0.lcssa\l}"];
}
